<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
                xmlns:h="http://xmlns.jcp.org/jsf/html"
                xmlns:p="http://primefaces.org/ui" xmlns:c="http://java.sun.com/jsp/jstl/core"
                xmlns:f="http://java.sun.com/jsf/core">

        <svg width="400" height="400" xmlns="http://www.w3.org/2000/svg" id="plot">

            <!-- Треугольник -->
            <polygon id="triangle" stroke="white" fill="white" fill-opacity="0.3" points="220,200 200,200 200,180"/>
            <!-- Прямоугольник -->
            <polygon id="rectangle" stroke="white" fill="white" fill-opacity="0.3" points="200,200 200,220 160,220 160,200 "/>
            <!-- Четверть эллипса -->
            <path id="circle" stroke="white" fill="white" fill-opacity="0.3"
                  d="M180,200 A20,20 90 0,1 200,180 L 200,200 Z"/>

        </svg>
        <p:remoteCommand update="results, plotGrid" immediate="true" name="clickPlot" action="${shotBean.addThroughPlot()}"/>
        <h:outputScript>
            function getCoordinates(event){
            let coordinates={}
            coordinates.r = parseFloat(document.getElementById(&apos;j_idt11:value_R_hinput&apos;).value);
            coordinates.x = ((event.offsetX - 200)/40).toFixed(2);
            coordinates.y = (((-1)*(event.offsetY - 200)) / 40).toFixed(2)
            console.log(coordinates)
            return coordinates;
            }

            document.getElementById(&apos;plot&apos;).addEventListener(&apos;click&apos;, function (event){
            let coords = getCoordinates(event);

            if (isValid(coords.x, coords.y, coords.r)) {
                clickPlot([{name: &apos;x&apos;, value: coords.x}, {name: &apos;y&apos;, value: coords.y}, {name: &apos;r&apos;, value: coords.r}]);
            document.getElementById(&quot;validate_messege&quot;).innerText = &quot;&quot;;

            }
            else {
                document.getElementById(&quot;validate_messege&quot;).innerText = &quot;Out of tolerance range !!!&quot;;
            }
            })
            <c:forEach var="shot" items="#{shotBean.shotsList}">
                makeDot(#{shot.x}, #{shot.y}, #{shot.r});
            </c:forEach>
            changingPlot();
        </h:outputScript>
</ui:composition>